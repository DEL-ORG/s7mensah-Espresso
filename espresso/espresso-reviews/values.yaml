# Default values for espresso-reviews.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2


deployment:
  review1: espresso-review1
  review2: espresso-review2

hpa:
  review1: espresso-hpa1
  review2: espresso-hpa2 


serviceaccount:
  name1: espresso-s1
  name2: espresso-s2

image:
  repository: adjei12/s7men
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "rev"

postgres-ha:
  name: postgres
  username: A1
  password: "QWoqMTIzNA=="
  database: "AB1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  name: espresso-shop-reviews-svc
  type: NodePort
  port: 8092
  containerPort: 80

configmap:
  name1: espresso-reviews
  name2: espresso-reviews2
  
cm:
  name: SERVICE_VERSION
  value: v1
  value2: v2


ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi


probe:
  enabled: false

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
